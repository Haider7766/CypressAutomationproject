trigger:
  - main

pool:
  vmImage: 'windows-latest'

variables:
  CYPRESS_CACHE_FOLDER: $(Pipeline.Workspace)/.cypress

steps:
  # 1) Setup Node.js
  - task: NodeTool@0
    inputs:
      versionSpec: '18.x'
    displayName: 'Install Node.js'

  # 2) Cache node_modules
  - task: Cache@2
    inputs:
      key: 'npm | "$(Agent.OS)" | package-lock.json'
      restoreKeys: |
        npm | "$(Agent.OS)"
      path: $(System.DefaultWorkingDirectory)/node_modules
    displayName: 'Cache node_modules'

  # 3) Cache Cypress binary
  - task: Cache@2
    inputs:
      key: 'cypress | "$(Agent.OS)" | package-lock.json'
      path: $(CYPRESS_CACHE_FOLDER)
    displayName: 'Cache Cypress binary'

  # 4) Install dependencies
  - script: npm ci
    displayName: 'Install dependencies'

  # 5) Verify Cypress installation
  - script: npx cypress verify
    displayName: 'Verify Cypress installation'

  # 6) Create reports directories (Windows compatible)
  - script: |
      if not exist cypress\reports\junit mkdir cypress\reports\junit
      if not exist cypress\reports\mochawesome mkdir cypress\reports\mochawesome
    displayName: 'Create report directories'

  # 7) Run Cypress tests
  - script: npm run cy:run
    displayName: 'Run Cypress tests'
    continueOnError: true

  # 8) Publish JUnit test results (for Azure DevOps test tab)
  - task: PublishTestResults@2
    inputs:
      testResultsFormat: 'JUnit'
      testResultsFiles: 'cypress/reports/junit/*.xml'
      searchFolder: '$(System.DefaultWorkingDirectory)'
      mergeTestResults: true
      testRunTitle: 'Cypress Tests'
      failTaskOnFailedTests: false
    displayName: 'Publish Test Results'
    condition: always()

  # 9) Publish Mochawesome HTML report as artifact
  - task: PublishBuildArtifacts@1
    inputs:
      PathtoPublish: 'cypress/reports/mochawesome'
      ArtifactName: 'mochawesome-html-report'
      publishLocation: 'Container'
      failOnEmpty: false
    displayName: 'Publish Mochawesome HTML Report'
    condition: always()
    continueOnError: true

  # 10) Publish screenshots (only exist when tests fail)
  - task: PublishBuildArtifacts@1
    inputs:
      PathtoPublish: 'cypress/screenshots'
      ArtifactName: 'cypress-screenshots'
      publishLocation: 'Container'
      failOnEmpty: false
    displayName: 'Publish Screenshots'
    condition: always()
    continueOnError: true

  # 11) Publish videos (only exist if video recording is enabled)
  - task: PublishBuildArtifacts@1
    inputs:
      PathtoPublish: 'cypress/videos'
      ArtifactName: 'cypress-videos'
      publishLocation: 'Container'
      failOnEmpty: false
    displayName: 'Publish Videos'
    condition: always()
    continueOnError: true