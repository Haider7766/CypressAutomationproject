trigger:
- main

pool:
  vmImage: 'windows-latest'

steps:
# 1) Install Node
- task: NodeTool@0
  inputs:
    versionSpec: '18.x'
  displayName: 'Install Node.js'

# 2) Install dependencies
- script: npm ci
  displayName: 'Install dependencies'

# 3) Run Cypress tests with multi-reporter
- script: npx cypress run --reporter cypress-multi-reporters --reporter-options configFile=reporter-config.json
  displayName: 'Run Cypress Tests'

# 4) Merge Mochawesome JSON & Generate HTML
- script: |
    npx mochawesome-merge cypress/reports/mochawesome/*.json > mochawesome.json
    npx marge mochawesome.json -f report -o cypress/reports/mochawesome
  displayName: 'Merge Mochawesome JSON and Generate HTML'
  condition: always()

# 5) Ensure folders exist (prevent publish errors if empty)
- script: |
    if not exist cypress\reports\mochawesome mkdir cypress\reports\mochawesome
    if not exist cypress\screenshots mkdir cypress\screenshots
    if not exist cypress\videos mkdir cypress\videos
    if not exist cypress\reports\junit mkdir cypress\reports\junit
  displayName: 'Ensure report folders exist'
  condition: always()

# 6) Debug - list output files
- script: |
    dir cypress\reports\mochawesome
    dir cypress\screenshots
    dir cypress\videos
    dir cypress\reports\junit
  displayName: 'List Cypress output files'
  condition: always()

# 7) Publish Mochawesome HTML Report
- task: PublishBuildArtifacts@1
  inputs:
    PathtoPublish: 'cypress/reports/mochawesome'
    ArtifactName: 'mochawesome-html-report'
    publishLocation: 'Container'
    failOnEmpty: false
  displayName: 'Publish Mochawesome HTML Report'
  condition: always()

# 8) Publish Screenshots
- task: PublishBuildArtifacts@1
  inputs:
    PathtoPublish: 'cypress/screenshots'
    ArtifactName: 'cypress-screenshots'
    publishLocation: 'Container'
    failOnEmpty: false
  displayName: 'Publish Screenshots'
  condition: always()

# 9) Publish Videos
- task: PublishBuildArtifacts@1
  inputs:
    PathtoPublish: 'cypress/videos'
    ArtifactName: 'cypress-videos'
    publishLocation: 'Container'
    failOnEmpty: false
  displayName: 'Publish Videos'
  condition: always()

# 10) Publish JUnit Results (for Azure Test Tab)
- task: PublishTestResults@2
  inputs:
    testResultsFiles: 'cypress/reports/junit/*.xml'
    testRunTitle: 'Cypress Test Results'
    mergeTestResults: true
  displayName: 'Publish JUnit Results'
  condition: always()
