trigger:
- main

pool:
  vmImage: 'windows-latest'

steps:
# 1) Install Node
- task: NodeTool@0
  inputs:
    versionSpec: '18.x'
  displayName: 'Install Node.js'

# 2) Install dependencies
- script: npm ci
  displayName: 'Install dependencies'

# 3) Ensure folders exist (before running Cypress!)
- powershell: |
    New-Item -ItemType Directory -Force -Path "cypress/reports/mochawesome" | Out-Null
    New-Item -ItemType Directory -Force -Path "cypress/screenshots" | Out-Null
    New-Item -ItemType Directory -Force -Path "cypress/videos" | Out-Null
  displayName: 'Ensure report folders exist'
  condition: always()

# 4) Run Cypress tests (force reporter usage)
- script: npx cypress run --reporter cypress-multi-reporters --reporter-options configFile=reporter-config.json
  displayName: 'Run Cypress Tests'

# 5) Debug - list output files
- script: dir cypress\reports\mochawesome && dir cypress\screenshots && dir cypress\videos
  displayName: 'List Cypress output files'
  condition: always()

# 5b) Debug - find JSON reports in entire workspace
- script: dir /s /b *.json
  displayName: 'Find all JSON files in workspace'
  condition: always()

# 6) Merge Mochawesome JSON & Generate HTML
- script: |
    npx mochawesome-merge cypress/reports/mochawesome/*.json > mochawesome.json
    npx marge mochawesome.json -f report -o cypress/reports/mochawesome
  displayName: 'Merge Mochawesome JSON and Generate HTML'
  condition: always()

# 7) Publish Mochawesome Report
- task: PublishBuildArtifacts@1
  inputs:
    PathtoPublish: 'cypress/reports/mochawesome'
    ArtifactName: 'mochawesome-html-report'
    publishLocation: 'Container'
    failOnEmpty: false
  displayName: 'Publish Mochawesome HTML Report'
  condition: always()

# 8) Publish Screenshots
- task: PublishBuildArtifacts@1
  inputs:
    PathtoPublish: 'cypress/screenshots'
    ArtifactName: 'cypress-screenshots'
    publishLocation: 'Container'
    failOnEmpty: false
  displayName: 'Publish Screenshots'
  condition: always()

# 9) Publish Videos
- task: PublishBuildArtifacts@1
  inputs:
    PathtoPublish: 'cypress/videos'
    ArtifactName: 'cypress-videos'
    publishLocation: 'Container'
    failOnEmpty: false
  displayName: 'Publish Videos'
  condition: always()

# 10) Publish JUnit Results (Azure Test Tab)
- task: PublishTestResults@2
  inputs:
    testResultsFiles: 'cypress/reports/junit/*.xml'
    testRunTitle: 'Cypress Test Results'
    mergeTestResults: true
  condition: always()
