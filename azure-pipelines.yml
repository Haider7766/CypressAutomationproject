trigger:
  - main

pool:
  vmImage: 'windows-latest'   # Windows agent

steps:
  # 1) Setup Node.js
  - task: NodeTool@0
    inputs:
      versionSpec: '22.x'
    displayName: 'Install Node.js'

  # 2) Cache node_modules
  - task: Cache@2
    inputs:
      key: 'npm | "$(Agent.OS)" | package-lock.json'
      restoreKeys: |
        npm | "$(Agent.OS)"
      path: $(Build.SourcesDirectory)/node_modules
    displayName: 'Cache node_modules'

  # 3) Cache Cypress binary
  - task: Cache@2
    inputs:
      key: 'cypress | "$(Agent.OS)" | package-lock.json'
      path: $(USERPROFILE)\AppData\Local\Cypress\Cache
    displayName: 'Cache Cypress binary'

  # 4) Install dependencies + Cypress binary
  - script: |
      npm ci
      npx cypress install
    displayName: 'Install dependencies and Cypress'

  # 5) Run Cypress tests (will fail if tests fail)
  - script: |
      npx cypress run
    displayName: 'Run Cypress tests'

  # 6) Always publish Cypress HTML Report as artifact
  - task: PublishBuildArtifacts@1
    inputs:
      PathtoPublish: 'cypress/reports'
      ArtifactName: 'cypress-report'
      publishLocation: 'Container'
    displayName: 'Publish Cypress HTML Report (artifact)'
    condition: always()

  # 7) Always show Cypress HTML Report in pipeline UI tab
  - task: PublishHtmlReport@1
    inputs:
      reportDir: 'cypress/reports'
      reportTitle: 'Cypress Test Report'
      reportName: 'Cypress Report'
    displayName: 'Publish Cypress HTML Report (UI tab)'
    condition: always()
